{"version":3,"sources":["Components/WalletMenu/WalletMenu.module.scss","Components/Header/Header.module.scss","Components/UI/Button/Button.module.scss","Components/Home/BalanceCard/BalanceCard.module.scss","Components/Header/FunctionButton/FunctionButton.module.scss","Components/UI/CustomModal/CustomModal.module.scss","Components/UI/MainContainer/MainContainer.module.scss","App.module.scss","utils/utils.js","constants/wallets.js","hooks/useWallet.js","constants/chains.js","hooks/useUpdate.js","hooks/useQuery.js","Components/Header/FunctionButton/FunctionButton.js","hooks/useWindowDimensions.jsx","hooks/useIsMobileView.jsx","Components/UI/CustomModal/CustomModal.jsx","Components/UI/Button/Button.js","Components/WalletMenu/WalletMenu.jsx","Components/Header/Header.js","Components/UI/MainContainer/MainContainer.js","Components/Home/BalanceCard/BalanceCard.js","constants/addresses.js","hooks/useContract.js","hooks/useIsMounted.jsx","hooks/useToken.js","utils/multicall.js","hooks/useBNBCrown.js","Components/Home/PlanCard/PlanCard.js","Components/Home/StakeCard/StakeCard.js","Components/UI/Countdown/Countdown.js","View/Home/Home.js","App.js","index.js","View/Home/Home.module.scss","Components/Home/PlanCard/PlanCard.module.scss","Components/Home/StakeCard/StakeCard.module.scss","Components/UI/Countdown/Countdown.module.scss"],"names":["module","exports","START_TIME","checkTime","ts","Date","getTime","PLAN_TYPE","FETCH_STATE","readContractReducer","state","action","type","isLoading","isError","data","payload","Error","toHex","decimalNum","toString","simpleMonth","m","WALLET","METAMASK","name","link","BINANCE","COINBASE","TRUST","WALLETCONNECT","SAFEPAL","IMTOKEN","TOKENPOCKET","ONTO","CLOVER","COIN98","LIQUALITY","BLOCTO","TARGET_CHAIN","chain","rpc","faucets","nativeCurrency","symbol","decimals","infoURL","shortName","chainId","networkId","slip44","explorers","url","standard","DEFAULT_RPC","walletContext","createContext","useWallet","useContext","ProvideWallet","children","wallet","useState","account","setAccount","ethers","providers","JsonRpcProvider","ethersProvider","setEthersProvider","resetDefault","useCallback","disconnect","provider","console","error","sessionStorage","removeItem","window","location","reload","connect","verifyChain","Number","request","method","handleChainChanged","networkData","chainName","rpcUrls","blockExplorerUrls","log","params","message","detectEthereumProvider","timeout","ethereumProvider","onto","open","on","Web3Provider","JSON","stringify","useEffect","parse","isMounted","getAccounts","tempAccount","send","accounts","length","toLowerCase","useProvideWallet","Provider","value","updateContext","useUpdate","ProvideUpdate","update","timer","setTimer","timerId","setInterval","now","clearInterval","updateByTimer","useProvideUpdate","queryContext","ProvideQuery","query","search","useLocation","URLSearchParams","useProvideQuery","FunctionButton","props","title","isBorder","bgColor","isDropdown","isSpecial","menu","className","styles","buttonWrapper","style","border","backgroundColor","overlay","placement","overlayClassName","Dropdown","CaretDownOutlined","href","target","rel","getWindowDimensions","width","innerWidth","height","innerHeight","useIsMobileView","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","CustomModal","visible","onCancel","rest","wrapClassName","classNames","destroyOnClose","centered","closable","footer","titleWrap","src","alt","onClick","defaultProps","Button","disabled","blue","WalletMenu","addr","walletListVisible","setWalletListVisible","toggleWalletListVisible","prev","walletButton","substring","walletList","Object","values","map","item","walletItem","MENU","TELEGRAM","items","key","label","Header","isMobileView","menuCollapsed","setMenuCollapsed","header","iconWrap","MenuOutlined","menuIcon","to","functionWrapper","MainContainer","classnames","BalanceCard","balanceCardWrapper","colorBar","cardContent","numeral","format","BNBCROWN_ADDRESS","TOKENS","useMulticallContract","useMemo","Contract","MULTICALL_ABI","abi","useBNBCrownContract","utils","isAddress","BNBCROWN_ABI","getSigner","useERC20Contract","address","IERC20_ABI","useIsMounted","useRef","current","useTokenBalance","tokenAddress","accountAddress","useReducer","dispatch","tokenContract","fetchData","parseInt","getBalance","balanceOf","formatEther","PAGE","multicallHelper","multicallContract","calls","multi","itf","Interface","res","pageNumber","Math","ceil","promises","Array","keys","i","newCalls","slice","calldata","call","encodeFunctionData","push","aggregate","Promise","all","responses","returnData","concat","index","decodeFunctionResult","useGlobalData","BNBCrownContract","totalInvestors","toNumber","startUNIX","startTime","INVEST_MIN_AMOUNT","minInvestAmount","planInfo","id","rate","period","time","PlanCard","totalReturnRate","withdrawTime","colorTheme","footNote","nativeBalance","invest","amount","plan","referral","parseEther","tx","wait","receipt","useInvest","investState","globalData","queryInviterAddress","get","info","stakeAmount","setStakeAmount","calculatedReturn","planCard","planBar","profitDetail","gutter","span","detailTitle","detailValue","fontSize","onChange","e","isNaN","getBnb","margin","button","StakeCard","startDate","endDate","earn","percent","progress","stakeCard","planTitle","planRate","planDetail","infoItem","left","right","inner","percentage","Countdown","sec","min","hour","day","timeLeft","setTimeLeft","timestamp","addLeadingZeros","val","String","setTimeout","endTS","diff","timeLeftLocal","year","floor","calculateTimeLeft","clearTimeout","countdownCol","colon","Home","contractBalance","claim","withdraw","useClaim","claimState","totalStaked","available","referralWithdrawn","referralEarned","directInvited","totalInvited","getUserAmountOfDeposits","userAmountOfDeposits","depositInfoCalls","depositInfo","start","startMonth","getMonth","startDay","getDate","finish","endMonth","endDay","profit","useUserInfo","userData","availableStart","setAvailableStart","referralLink","origin","home","mainContentWrapper","balanceInfo","countdownWrap","countdown","mainIntro","common","introWrapper","introContent","plans","selectorList","grid","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Item","userInfo","referralWrapper","stakeSummary","end","duration","decimal","withdrawButton","referralDetail","text","onCopy","success","cursor","referralData","referralBonus","stakeDetail","App","path","element","replace","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.30c418d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"WalletMenu\":\"WalletMenu_WalletMenu__rul3Y\",\"walletList\":\"WalletMenu_walletList__2JjeU\",\"walletItem\":\"WalletMenu_walletItem__2LSEQ\",\"walletButton\":\"WalletMenu_walletButton__1Oqr0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__yfRMG\",\"menuIcon\":\"Header_menuIcon__X6HfG\",\"iconWrap\":\"Header_iconWrap__1inXy\",\"functionWrapper\":\"Header_functionWrapper__szbrW\",\"walletButton\":\"Header_walletButton__3u2bJ\",\"updown\":\"Header_updown__3cGF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__39XKR\",\"disabled\":\"Button_disabled__qAHVr\",\"blue\":\"Button_blue__2uu1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceCardWrapper\":\"BalanceCard_balanceCardWrapper__saTWw\",\"colorBar\":\"BalanceCard_colorBar__2kWt0\",\"cardContent\":\"BalanceCard_cardContent__s00oW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrapper\":\"FunctionButton_buttonWrapper__1GilM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomModal\":\"CustomModal_CustomModal__MqY7S\",\"titleWrap\":\"CustomModal_titleWrap__umjPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"MainContainer_MainContainer__1zAoH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","export const MOBILE_BREAK_POINT = 900;\n\nexport const SECOND = 1;\nexport const MINUTES = SECOND * 60;\nexport const HOUR = MINUTES * 60;\nexport const DAY = HOUR * 24;\nexport const MONTH = DAY * 30;\nexport const YEAR = DAY * 365;\n\nexport const START_TIME = 1660140000 * 1000 + 86400000*2;\n\nexport const truncAddress = (addr) => {\n  if (addr && addr.length === 42) {\n    return `${addr.substring(0, 6)}...${addr.substring(addr.length - 4)}`;\n  }\n  return \"\";\n};\n\n// check if a timestamp is from the past, need to be in millisecond\nexport const checkTime = (ts) => new Date().getTime() > ts;\n\nexport const PLAN_TYPE = {\n  SIMPLE: 0,\n  COMPOUND: 1,\n};\n\nexport const FETCH_STATE = {\n  INIT: 0,\n  SUCCESS: 1,\n  FAILURE: 2,\n};\n// reducer for general contract calls including states: loading, error, data\nexport const readContractReducer = (state, action) => {\n  switch (action.type) {\n    case FETCH_STATE.INIT:\n      return {\n        ...state,\n        isLoading: true,\n        isError: false,\n      };\n    case FETCH_STATE.SUCCESS:\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data: action.payload,\n      };\n    case FETCH_STATE.FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        isError: true,\n      };\n    default:\n      throw new Error(\"Invalid general contract action\");\n  }\n};\n\nexport const MIN_DEPOSIT = 0.005;\nexport const toHex = (decimalNum) => `0x${decimalNum.toString(16)}`;\n\nexport const simpleMonth = (m) =>{\n  if(m === 0) return 'Jan';\n  if(m === 1) return 'Feb';\n  if(m === 2) return 'Mar';\n  if(m === 3) return 'Apr';\n  if(m === 4) return 'May';\n  if(m === 5) return 'Jun';\n  if(m === 6) return 'Jul';\n  if(m === 7) return 'Aug';\n  if(m === 8) return 'Sep';\n  if(m === 9) return 'Otc';\n  if(m === 10) return 'Nov';\n  if(m === 11) return 'Dec';\n}","export const WALLET = {\n  METAMASK: {\n    name: \"MetaMask\",\n    type: \"metamask\",\n    link: \"https://metamask.app.link/dapp/bnbcrown.com/\",\n  },\n  BINANCE: {\n    name: \"Binance\",\n    type: \"binance\",\n    link: \"https://link.trustwallet.com/open_url?coin_id=60&url=https://bnbcrown.com\",\n  },\n  COINBASE: {\n    name: \"Coinbase\",\n    type: \"coinbase\",\n    link: \"https://go.cb-w.com/dapp?cb_url=https://bnbcrown.com\",\n  },\n  TRUST: {\n    name: \"Trust\",\n    type: \"trust\",\n    link: \"https://link.trustwallet.com/open_url?coin_id=60&url=https://bnbcrown.com\",\n  },\n  WALLETCONNECT: {\n    name: \"WalletConnect\",\n    type: \"walletConnect\",\n    link: \"https://walletconnect.com/\",\n  },\n  SAFEPAL: {\n    name: \"SafePal\",\n    type: \"safepal\",\n    link: \"https://safepal.io/\",\n  },\n  IMTOKEN: {\n    name: \"imToken\",\n    type: \"imtoken\",\n    link: \"imtokenv2://navigate/DappView?url=https://bnbcrown.com\",\n  },\n  TOKENPOCKET: {\n    name: \"TokenPocket\",\n    type: \"tokenPocket\",\n    link: \"https://www.tokenpocket.pro/\",\n  },\n  ONTO: {\n    name: \"ONTO\",\n    type: \"onto\",\n    link: \"https://onto.app/\",\n  },\n  CLOVER: {\n    name: \"Clover\",\n    type: \"clover\",\n    link: \"https://clv.org/\",\n  },\n  COIN98: {\n    name: \"Coin98\",\n    type: \"coin98\",\n    link: \"https://coin98.com/\",\n  },\n  LIQUALITY: {\n    name: \"Liquality\",\n    type: \"liquality\",\n    link: \"https://liquality.io/wallet.html\",\n  },\n  BLOCTO: {\n    name: \"Blocto\",\n    type: \"blocto\",\n    link: \"https://blocto.app/link?url=https://bnbcrown.com\",\n  },\n\n  // PORTIS: {\n  //   name: 'Portis',\n  //   type: 'portis',\n  //   link: 'https://www.portis.io/',\n  // },\n  // FORTMATIC: {\n  //   name: 'Fortmatic',\n  //   type: 'fortmatic',\n  //   link: 'https://fortmatic.com/',\n  // },\n};\n\nexport default WALLET;\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  createContext,\n  useCallback,\n} from \"react\";\nimport { message } from \"antd\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n// import WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport PropTypes from \"prop-types\";\nimport { ethers } from \"ethers\";\nimport { toHex } from \"../utils/utils\";\nimport { WALLET } from \"../constants/wallets\";\n\nimport { CHAINS } from \"../constants/chains\";\n\nconst TARGET_CHAIN = CHAINS.BSC;\n\nconst DEFAULT_RPC = TARGET_CHAIN.rpc[0];\n\nconst walletContext = createContext();\n\nexport const useWallet = () => useContext(walletContext);\n\n// Provider hook that creates auth object and handles state\nfunction useProvideWallet() {\n  const [account, setAccount] = useState(null);\n  const [ethersProvider, setEthersProvider] = useState(\n    new ethers.providers.JsonRpcProvider(DEFAULT_RPC)\n  );\n\n  const resetDefault = useCallback(() => {\n    setAccount(null);\n    setEthersProvider(new ethers.providers.JsonRpcProvider(DEFAULT_RPC));\n  }, []);\n\n  const disconnect = async () => {\n    resetDefault();\n    try {\n      await ethersProvider.provider.disconnect(); // end walletconnect session\n    } catch (err) {\n      console.error(\"no disconnect func\");\n    }\n    sessionStorage.removeItem(\"wallet\");\n    window.location.reload();\n  };\n\n  // connect to chain\n  const connect = useCallback(async (wallet = WALLET.METAMASK) => {\n    // helper: verify current chain with target\n    const verifyChain = async (provider) => {\n      // const chainId = parseInt(await provider.request({ method: 'eth_chainId' }), 16);\n      const chainId = Number(await provider.request({ method: \"eth_chainId\" }));\n      // console.log('current chainId:', chainId);\n      return chainId === TARGET_CHAIN.chainId;\n    };\n    // handle chain change\n    const handleChainChanged = async (provider) => {\n      // add/switch chain to target chain\n      if (!(await verifyChain(provider))) {\n        const networkData = {\n          chainId: toHex(TARGET_CHAIN.chainId),\n          chainName: TARGET_CHAIN.name,\n          nativeCurrency: TARGET_CHAIN.nativeCurrency,\n          rpcUrls: TARGET_CHAIN.rpc,\n          blockExplorerUrls: [TARGET_CHAIN.explorers[0].url],\n        };\n        console.log(\"networkData\", networkData);\n\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [networkData, null],\n        });\n\n        // verify chain switch\n        if (!(await verifyChain(provider))) {\n          message.error(\"Chain Error.\");\n          throw new Error(\"Chain switch failed\");\n        }\n      }\n    };\n\n    try {\n      let ethereumProvider;\n      try {\n        ethereumProvider = await detectEthereumProvider({ timeout: 1000 });\n      } catch (err) {\n        console.error(err);\n      }\n      // handle multi wallets\n      let provider;\n      // let tempProvider;\n      switch (wallet) {\n        // case WALLET.WALLETCONNECT.type:\n        //   console.log(wallet.type);\n        //   tempProvider = new WalletConnectProvider({\n        //     rpc: {\n        //       56: \"https://bsc-dataseed1.binance.org\",\n        //     },\n        //     chainId: 56,\n        //     network: \"binance\",\n        //   });\n        //   //  Enable session (triggers QR Code modal)\n        //   try {\n        //     await tempProvider.enable();\n        //     provider = tempProvider;\n        //   } catch (err) {\n        //     console.log(err);\n        //   }\n        //   break;\n        case WALLET.ONTO.type:\n          provider = window.onto || ethereumProvider;\n          break;\n        default:\n          provider = ethereumProvider;\n      }\n\n      // handle no provider\n      if (!provider) {\n        console.log(\"No provider detected\");\n        window.open(\n          wallet.link,\n          \"_blank\" // <- This is what makes it open in a new window.\n        );\n        return;\n      }\n\n      // unlock wallet\n      try {\n        await provider.request({ method: \"eth_requestAccounts\" });\n      } catch (err) {\n        console.log(\"eth_requestAccounts failed\");\n      }\n\n      // add event listener\n      if (wallet.type !== WALLET.ONTO.type) {\n        // listen to chainChanged\n        provider.on(\"chainChanged\", () => {\n          window.location.reload();\n        });\n\n        // listen to accountsChanged\n        provider.on(\"accountsChanged\", () => {\n          window.location.reload();\n        });\n      }\n\n      // change chain\n      await handleChainChanged(provider);\n\n      // set ethersProvider\n      setEthersProvider(new ethers.providers.Web3Provider(provider));\n\n      // set auto connect\n      sessionStorage.wallet = JSON.stringify(wallet);\n    } catch (err) {\n      console.error(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (sessionStorage.wallet) {\n      connect(JSON.parse(sessionStorage.wallet));\n    }\n  }, [connect]);\n\n  useEffect(() => {\n    let isMounted = true;\n    const getAccounts = async () => {\n      let tempAccount = null;\n      if (ethersProvider instanceof ethers.providers.Web3Provider) {\n        try {\n          const accounts = await ethersProvider.send(\"eth_accounts\", []);\n          if (accounts.length !== 0) {\n            tempAccount = accounts[0].toLowerCase();\n          }\n        } catch (err) {\n          console.error(\"noWalletConnected\", err);\n        }\n      }\n      if (isMounted) {\n        setAccount(tempAccount);\n      }\n    };\n    getAccounts();\n    return () => {\n      isMounted = false;\n    };\n  }, [ethersProvider]);\n\n  return {\n    account,\n    connect,\n    disconnect,\n    ethersProvider,\n  };\n}\n\nexport function ProvideWallet({ children }) {\n  const wallet = useProvideWallet();\n  return (\n    <walletContext.Provider value={wallet}>{children}</walletContext.Provider>\n  );\n}\n\nProvideWallet.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","export const CHAINS = {\n  BSC: {\n    name: \"BSC Mainnet\",\n    chain: \"BSC\",\n    rpc: [\n      \"https://bsc-dataseed1.binance.org\",\n      \"https://bsc-dataseed2.binance.org\",\n      \"https://bsc-dataseed3.binance.org\",\n      \"https://bsc-dataseed4.binance.org\",\n      \"https://bsc-dataseed1.defibit.io\",\n      \"https://bsc-dataseed2.defibit.io\",\n      \"https://bsc-dataseed3.defibit.io\",\n      \"https://bsc-dataseed4.defibit.io\",\n      \"https://bsc-dataseed1.ninicoin.io\",\n      \"https://bsc-dataseed2.ninicoin.io\",\n      \"https://bsc-dataseed3.ninicoin.io\",\n      \"https://bsc-dataseed4.ninicoin.io\",\n      \"wss://bsc-ws-node.nariox.org\",\n    ],\n    faucets: [\"https://free-online-app.com/faucet-for-eth-evm-chains/\"],\n    nativeCurrency: {\n      name: \"Binance Chain Native Token\",\n      symbol: \"BNB\",\n      decimals: 18,\n    },\n    infoURL: \"https://www.binance.org\",\n    shortName: \"bsc\",\n    chainId: 56,\n    networkId: 56,\n    slip44: 714,\n    explorers: [\n      { name: \"bscscan\", url: \"https://bscscan.com\", standard: \"EIP3091\" },\n    ],\n  },\n  OEC: {\n    name: \"OKXChain Mainnet\",\n    chain: \"okexchain\",\n    rpc: [\"https://exchainrpc.okex.org\"],\n    faucets: [\"https://free-online-app.com/faucet-for-eth-evm-chains/\"],\n    nativeCurrency: {\n      name: \"OKExChain Global Utility Token\",\n      symbol: \"OKT\",\n      decimals: 18,\n    },\n    infoURL: \"https://www.okex.com/okexchain\",\n    shortName: \"okt\",\n    chainId: 66,\n    networkId: 66,\n    explorers: [\n      {\n        name: \"OKLink\",\n        url: \"https://www.oklink.com/okexchain\",\n        standard: \"EIP3091\",\n      },\n    ],\n  },\n};\n","import { createContext, useContext, useEffect, useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\n// import { useWallet } from './useWallet';\n\nconst updateContext = createContext();\n\nexport const useUpdate = () => useContext(updateContext);\n\nconst useProvideUpdate = () => {\n  const [timer, setTimer] = useState();\n\n  useEffect(() => {\n    let isMounted = true;\n    const timerId = setInterval(() => {\n      if (isMounted) setTimer(Date.now());\n    }, 6000);\n    return () => {\n      isMounted = false;\n      clearInterval(timerId);\n    };\n  }, []);\n\n  return { updateByTimer: timer };\n};\n\nexport function ProvideUpdate({ children }) {\n  const update = useProvideUpdate();\n  return (\n    <updateContext.Provider value={update}>{children}</updateContext.Provider>\n  );\n}\nProvideUpdate.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React, { createContext, useContext, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst queryContext = createContext();\n\nexport const useQuery = () => useContext(queryContext);\n\nconst useProvideQuery = () => {\n  const { search } = useLocation();\n  const [query] = useState(new URLSearchParams(search));\n  return query;\n};\n\nexport function ProvideQuery({ children }) {\n  const query = useProvideQuery();\n  return <queryContext.Provider value={query}>{children}</queryContext.Provider>;\n}\nProvideQuery.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import React from \"react\";\nimport { Dropdown } from \"antd\";\nimport { CaretDownOutlined } from \"@ant-design/icons\";\n\nimport styles from \"./FunctionButton.module.scss\";\nconst FunctionButton = (props) => {\n  const { title, isBorder, bgColor, isDropdown, isSpecial, link, menu } = props;\n  return (\n    <div\n      className={styles.buttonWrapper}\n      style={{\n        border: isSpecial\n          ? \" 1px solid #f39c12\"\n          : isBorder\n          ? \"1px solid #FFFFFF\"\n          : \"none\",\n        backgroundColor: bgColor,\n      }}\n    >\n      {isDropdown ? (\n        <Dropdown\n          overlay={menu}\n          placement=\"bottom\"\n          overlayClassName={styles.Dropdown}\n        >\n          <div>\n            {title}\n            <CaretDownOutlined />\n          </div>\n        </Dropdown>\n      ) : (\n        <a href={link} target=\"_blank\" rel=\"noreferrer noopener\">\n          {title}\n        </a>\n      )}\n    </div>\n  );\n};\n\nexport default FunctionButton;\n","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n","import { MOBILE_BREAK_POINT } from \"../utils/utils\";\nimport { useWindowDimensions } from \"./useWindowDimensions\";\n\nexport const useIsMobileView = () => {\n  const { width } = useWindowDimensions();\n  return width <= MOBILE_BREAK_POINT;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Modal } from \"antd\";\nimport classNames from \"classnames\";\n\nimport styles from \"./CustomModal.module.scss\";\n\nconst CustomModal = (props) => {\n  const { children, className, title, visible, width, onCancel, ...rest } =\n    props;\n  return (\n    <Modal\n      wrapClassName={classNames(styles.CustomModal, className)}\n      visible={visible}\n      width={width}\n      onCancel={onCancel}\n      destroyOnClose\n      centered\n      closable={false}\n      footer={null}\n      {...rest}\n    >\n      <div className={styles.titleWrap}>\n        <h2>{title}</h2>\n        <img\n          src=\"/static/images/icons/close.svg\"\n          alt=\"close\"\n          onClick={onCancel}\n        />\n      </div>\n      {children}\n    </Modal>\n  );\n};\n\nCustomModal.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  visible: PropTypes.bool,\n  width: PropTypes.number,\n};\n\nCustomModal.defaultProps = {\n  children: null,\n  className: \"\",\n  title: \"\",\n  visible: false,\n  width: 450,\n};\n\nexport default CustomModal;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  const { children, className, onClick, disabled, blue } = props;\n  return (\n    <div\n      className={classNames(\n        styles.Button,\n        className,\n        {\n          [styles.disabled]: disabled,\n        },\n        { [styles.blue]: blue }\n      )}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nButton.defaultProps = { onClick: () => {} };\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport WALLET from \"../../constants/wallets\";\nimport { truncAddress } from \"../../utils/utils\";\nimport { useWallet } from \"../../hooks/useWallet\";\nimport CustomModal from \"../UI/CustomModal/CustomModal\";\nimport Button from \"../UI/Button/Button\";\n\nimport styles from \"./WalletMenu.module.scss\";\n\nconst WalletMenu = () => {\n  const [walletListVisible, setWalletListVisible] = useState(false);\n  const { account, connect, disconnect } = useWallet();\n\n  const toggleWalletListVisible = () => {\n    setWalletListVisible((prev) => !prev);\n  };\n\n  return (\n    <div className={styles.WalletMenu}>\n      {!account && (\n        <Button\n          className={styles.walletButton}\n          onClick={toggleWalletListVisible}\n        >\n          Connect\n        </Button>\n\n        // <div className={styles.walletButton} onClick={toggleWalletListVisible}>\n        //   {/* <FunctionButton title=\"Connect Wallet\" bgColor=\"#F39C12\" isSpecial /> */}\n        // </div>\n      )}\n      {account && (\n        <Button className={styles.walletButton} onClick={disconnect}>\n          {truncAddress(account)}\n        </Button>\n        // <div className={styles.walletButton} onClick={disconnect}>\n\n        //   {/* <FunctionButton\n        //     title={truncAddress(account)}\n        //     bgColor=\"#F39C12\"\n        //     isSpecial\n        //   /> */}\n        // </div>\n      )}\n      <CustomModal\n        visible={walletListVisible}\n        onCancel={toggleWalletListVisible}\n        title={\"Connect Wallet\"}\n      >\n        <div className={styles.walletList}>\n          {Object.values(WALLET).map((item) => (\n            <div\n              className={styles.walletItem}\n              onClick={() => {\n                connect(item);\n                toggleWalletListVisible();\n              }}\n              key={item.type}\n            >\n              <img\n                src={`/static/images/wallets/${item.type}.png`}\n                alt={item.name}\n              />\n              <p>{item.name}</p>\n            </div>\n          ))}\n        </div>\n      </CustomModal>\n    </div>\n  );\n};\n\nWalletMenu.propTypes = {};\n\nexport default WalletMenu;\n","import React, { useEffect, useState } from \"react\";\n\nimport FunctionButton from \"./FunctionButton/FunctionButton\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { useIsMobileView } from \"../../hooks/useIsMobileView\";\nimport { Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport WalletMenu from \"../WalletMenu/WalletMenu\";\nimport styles from \"./Header.module.scss\";\n\nconst MENU = {\n  TELEGRAM: (\n    <Menu\n      items={[\n        {\n          key: \"1\",\n          label: (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://t.me/BnbCrown\"\n            >\n              Telegram\n            </a>\n          ),\n        },\n        {\n          key: \"2\",\n          label: (\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://t.me/BnbCrownChannel\"\n            >\n              Channel\n            </a>\n          ),\n        },\n      ]}\n    />\n  ),\n};\n\nconst Header = () => {\n  const isMobileView = useIsMobileView();\n  const [menuCollapsed, setMenuCollapsed] = useState(isMobileView || false);\n\n  useEffect(() => {\n    if (isMobileView) {\n      setMenuCollapsed(true);\n    } else {\n      setMenuCollapsed(false);\n    }\n  }, [isMobileView]);\n\n  const toggleMenu = () => {\n    if (isMobileView) {\n      setMenuCollapsed(!menuCollapsed);\n    }\n  };\n  return (\n    <div className={styles.header}>\n      {/* {isMobileView && (\n        // <MenuOutlined className={styles.menuIcon} onClick={toggleMenu} />\n        <img\n          src=\"./static/images/header/crown.png\"\n          alt=\"crown\"\n          onClick={toggleMenu}\n          className={styles.menuIcon}\n        />\n      )} */}\n      {/* {!menuCollapsed && !isMobileView && (\n        <div className={styles.iconWrap}>\n          <img src=\"./static/images/header/headerlogo.png\" alt=\"bnb crown\" />\n        </div>\n      )} */}\n\n      <div className={styles.iconWrap}>\n        {isMobileView && (\n          <>\n            <MenuOutlined className={styles.menuIcon} onClick={toggleMenu} />\n            <Link to={\"/\"}>\n              <img\n                src=\"./static/images/header/headerlogo.png\"\n                alt=\"bnb crown\"\n              />\n            </Link>\n          </>\n        )}\n        {!isMobileView && (\n          <img src=\"./static/images/header/headerlogo.png\" alt=\"bnb crown\" />\n        )}\n      </div>\n\n      {!menuCollapsed && (\n        <div className={styles.functionWrapper}>\n          {/*<FunctionButton title=\"Support\" isBorder={true} />*/}\n          <FunctionButton\n            title=\"Telegram\"\n            isBorder\n            bgColor=\"#0088CC\"\n            isDropdown\n            menu={MENU.TELEGRAM}\n          />\n          <FunctionButton\n            title=\"Medium\"\n            isBorder\n            bgColor=\"#f2b617\"\n            // isDropdown\n            link=\"https://bnbcrown.medium.com/\"\n          />\n          <FunctionButton\n            title=\"Twitter\"\n            isBorder\n            bgColor=\"#1DA1F2\"\n            // isDropdown\n            link=\"https://twitter.com/BnbCrownMiner\"\n          />\n          <FunctionButton\n            title=\"Audit\"\n            isBorder\n            bgColor=\"#126CF3\"\n            link=\"https://hazecrypto.net/audit/BNBCrown\"\n          />\n          <FunctionButton\n            title=\"Presentation\"\n            isBorder\n            bgColor=\"#F36312\"\n            link={\"/static/presentation.pdf\"}\n            // isDropdown\n          />\n        </div>\n      )}\n      <WalletMenu />\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport styles from './MainContainer.module.scss';\n\nconst MainContainer = (props) => {\n  const { className, children } = props;\n  return <div className={classnames(styles.MainContainer, className)}>{children}</div>;\n};\n\nMainContainer.propTypes = { className: PropTypes.string, children: PropTypes.node };\n\nMainContainer.defaultProps = {\n  className: '',\n  children: null,\n};\n\nexport default MainContainer;\n","import React from \"react\";\nimport numeral from 'numeral';\nimport styles from \"./BalanceCard.module.scss\";\nconst BalanceCard = (props) => {\n  const { title, value } = props;\n  return (\n    <div className={styles.balanceCardWrapper}>\n      <div className={styles.colorBar} />\n      <div className={styles.cardContent}>\n        <h2>{title}</h2>\n        <p>{numeral(value).format('0,0.[000]')}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default BalanceCard;\n","export const MULTICALL_ADDRESS = \"0xE1dDc30f691CA671518090931e3bFC1184BFa4Aa\";\n\nexport const BNBCROWN_ADDRESS = \"0x72FC0e09971C1Cc30F06E0c27972a759BB157bE9\"; //0xfb6d82f030776aD127de68cC0E4Cf498119682Ef\n\nexport const DEFAULT_INVITER = \"0x0925C07d2b30eF691b7399d0692A6502d011E535\";\n\nexport const TOKENS = {\n  NATIVE: \"0x0000000000000000000000000000000000000000\",\n  ACCEPT: \"0x382bb369d343125bfb2117af9c149795c6c65c50\",\n};\n","import { useMemo } from \"react\";\nimport { ethers, Contract } from \"ethers\";\nimport { useWallet } from \"./useWallet\";\n\nimport MULTICALL_ABI from \"../abis/multicall.json\";\nimport BNBCROWN_ABI from \"../abis/bnbCrown.json\";\nimport IERC20_ABI from \"../abis/IERC20.json\";\n\nimport {\n  MULTICALL_ADDRESS,\n  BNBCROWN_ADDRESS,\n} from \"../constants/addresses\";\n\n\nexport const useMulticallContract = () => {\n  const { ethersProvider } = useWallet();\n  return useMemo(() => {\n    if (!ethersProvider) {\n      return null;\n    }\n    return new Contract(MULTICALL_ADDRESS, MULTICALL_ABI.abi, ethersProvider);\n  }, [ethersProvider]);\n};\n\nexport const useBNBCrownContract = () => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!(ethersProvider && ethers.utils.isAddress(BNBCROWN_ADDRESS))) {\n      return null;\n    }\n    return account\n      ? new Contract(BNBCROWN_ADDRESS, BNBCROWN_ABI.abi, ethersProvider.getSigner())\n      : new Contract(BNBCROWN_ADDRESS, BNBCROWN_ABI.abi, ethersProvider);\n  }, [account, ethersProvider]);\n};\n\nexport const useERC20Contract = (address) => {\n  const { ethersProvider, account } = useWallet();\n  return useMemo(() => {\n    if (!(ethersProvider && ethers.utils.isAddress(address))) {\n      return null;\n    }\n    return account\n      ? new Contract(address, IERC20_ABI.abi, ethersProvider.getSigner())\n      : new Contract(address, IERC20_ABI.abi, ethersProvider);\n  }, [ethersProvider, address, account]);\n};\n","import { useRef, useEffect } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n    return () => (isMounted.current = false);\n  }, []);\n\n  return isMounted;\n}\n","import { ethers } from \"ethers\";\nimport { useEffect, useReducer } from \"react\";\nimport { FETCH_STATE, readContractReducer } from \"../utils/utils\";\nimport { useERC20Contract } from \"./useContract\";\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useUpdate } from \"./useUpdate\";\nimport { useWallet } from \"./useWallet\";\n\nexport const useTokenBalance = (tokenAddress, accountAddress = null) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const tokenContract = useERC20Contract(tokenAddress);\n  const { account, ethersProvider } = useWallet();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { utils } = ethers;\n\n      try {\n        if (\n          !(\n            ethersProvider &&\n            tokenContract &&\n            (ethers.utils.isAddress(accountAddress) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        let data;\n        if (parseInt(tokenAddress, 16) === 0) {\n          data = await ethersProvider.getBalance(accountAddress || account);\n        } else {\n          data = await tokenContract.balanceOf(accountAddress || account);\n        }\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: Number(utils.formatEther(data)),\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    tokenContract,\n    account,\n    accountAddress,\n    ethersProvider,\n    isMounted,\n    updateByTimer,\n    tokenAddress,\n  ]);\n  return state;\n};\n\nexport const useTokenAllowance = (\n  tokenAddress,\n  targetContractAddress,\n  accountAddress = null\n) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const tokenContract = useERC20Contract(tokenAddress);\n  const { account, ethersProvider } = useWallet();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { utils } = ethers;\n\n      try {\n        if (\n          !(\n            targetContractAddress &&\n            ethersProvider &&\n            tokenContract &&\n            (ethers.utils.isAddress(accountAddress) || account)\n          )\n        ) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n        const data = await tokenContract.allowance(\n          accountAddress || account,\n          targetContractAddress\n        );\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: Number(utils.formatEther(data)),\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    tokenContract,\n    account,\n    accountAddress,\n    ethersProvider,\n    isMounted,\n    updateByTimer,\n    targetContractAddress,\n  ]);\n  return state;\n};\n\nexport const useTokenApprove = (tokenAddress) => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const tokenContract = useERC20Contract(tokenAddress);\n  const isMounted = useIsMounted();\n\n  const approve = async (\n    targetAddress,\n    amount = \"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\"\n  ) => {\n    try {\n      if (!tokenContract) {\n        return;\n      }\n      dispatch({ type: FETCH_STATE.INIT });\n      const tx = await tokenContract.approve(targetAddress, amount);\n      console.log(\"tx\", tx);\n      const receipt = await tx.wait();\n      console.log(\"receipt\", receipt);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.SUCCESS, payload: null });\n      }\n    } catch (error) {\n      console.log(error);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.FAILURE });\n      }\n    }\n  };\n\n  return { state, approve };\n};\n","// import React from 'react';\nimport { Interface } from \"@ethersproject/abi\";\n// import { useMulticallContract } from '../hooks/useContract';\n\nconst PAGE = 100;\nexport const multicallHelper = async (multicallContract, abi, calls) => {\n  const multi = await multicallContract;\n  const itf = new Interface(abi);\n  let res = [];\n  if (calls.length > PAGE) {\n    const pageNumber = Math.ceil(calls.length / PAGE);\n    const promises = [];\n    // create promise\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i of Array(pageNumber).keys()) {\n      const newCalls = calls.slice(i * PAGE, PAGE * (i + 1));\n      const calldata = newCalls.map((call) => [\n        call[0].toLowerCase(),\n        itf.encodeFunctionData(call[1], call[2]),\n      ]);\n      promises.push(multi.aggregate(calldata));\n    }\n    // wait for promise\n    const responses = await Promise.all(promises);\n    // decode response\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i of Array(pageNumber).keys()) {\n      const newCalls = calls.slice(i * PAGE, PAGE * (i + 1));\n      const { returnData } = responses[i];\n      res = res.concat(\n        returnData.map((call, index) =>\n          itf.decodeFunctionResult(newCalls[index][1], call)\n        )\n      );\n    }\n  } else {\n    const calldata = calls.map((call) => [\n      call[0].toLowerCase(),\n      itf.encodeFunctionData(call[1], call[2]),\n    ]);\n    const { returnData } = await multi.aggregate(calldata);\n    res = returnData.map((call, i) =>\n      itf.decodeFunctionResult(calls[i][1], call)\n    );\n  }\n  return res;\n};\n\nexport default multicallHelper;\n","import {useEffect, useReducer} from \"react\";\nimport {ethers} from \"ethers\";\n\nimport {readContractReducer, FETCH_STATE, PLAN_TYPE, checkTime, simpleMonth} from \"../utils/utils\";\nimport { multicallHelper } from \"../utils/multicall\";\nimport {useBNBCrownContract, useMulticallContract} from \"./useContract\";\nimport { useIsMounted } from \"./useIsMounted\";\nimport { useWallet } from \"./useWallet\";\nimport { useUpdate } from \"./useUpdate\";\nimport BNBCROWN_ABI from \"../abis/bnbCrown.json\";\n\nexport const useGlobalData = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: [],\n  });\n  const BNBCrownContract = useBNBCrownContract();\n  const multicallContract = useMulticallContract();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n  const { account } = useWallet();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!(BNBCrownContract && account)) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n\n        const totalInvestors = (await BNBCrownContract.totalInvestors()).toNumber();\n\n        const startTime = (await BNBCrownContract.startUNIX()).toNumber();\n\n        const minInvestAmount = Number(ethers.utils.formatEther((await BNBCrownContract.INVEST_MIN_AMOUNT())));\n        // get nft ids\n        const calls = [];\n        for(let i = 0; i <6; i++){\n          calls.push([BNBCrownContract.address, \"getPlanInfo\", [i]]); // 1-6 time\n          calls.push([BNBCrownContract.address, \"getPercent\", [i]]); //7-12 percent\n        }\n        const res = (\n          await multicallHelper(multicallContract, BNBCROWN_ABI.abi, calls)\n        )\n        const planInfo = Array(6);\n\n        for(let i = 0; i <6; i++){\n          planInfo[i]={\n            id:i+1,\n            rate:res[i*2 + 1][0].toNumber() / 1000,\n            period: res[i*2].time.toNumber(),\n            type: i < 3 ? PLAN_TYPE.SIMPLE : PLAN_TYPE.COMPOUND\n          }\n        }\n\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: {\n              planInfo,\n              startTime,\n              totalInvestors,\n              minInvestAmount\n            },\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    BNBCrownContract,\n    multicallContract,\n    isMounted,\n    updateByTimer,\n    account,\n  ]);\n\n  return state;\n};\n\nexport const useUserInfo = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: [],\n  });\n  const BNBCrownContract = useBNBCrownContract();\n  const multicallContract = useMulticallContract();\n  const isMounted = useIsMounted();\n  const { updateByTimer } = useUpdate();\n  const { account } = useWallet();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!(BNBCrownContract && account)) {\n          return;\n        }\n        dispatch({ type: FETCH_STATE.INIT });\n\n        const calls = [];\n        calls.push([BNBCrownContract.address, \"getUserTotalDeposits\", [account]]);\n        calls.push([BNBCrownContract.address, \"getUserAvailable\", [account]]);\n        calls.push([BNBCrownContract.address, \"getUserReferralWithdrawn\", [account]]);\n        calls.push([BNBCrownContract.address, \"getUserReferralTotalBonus\", [account]]);\n        calls.push([BNBCrownContract.address, \"getUserDownlineCount\", [account]]);\n\n        const res =  await multicallHelper(multicallContract, BNBCROWN_ABI.abi, calls);\n\n        const totalStaked = Number(ethers.utils.formatEther(res[0][0]));\n        const available = Number(ethers.utils.formatEther(res[1][0]));\n        const referralWithdrawn = Number(ethers.utils.formatEther(res[2][0]));\n        const referralEarned = Number(ethers.utils.formatEther(res[3][0]));\n        const directInvited = res[4][0].toNumber();\n        const totalInvited = res[4][0].toNumber() + res[4][1].toNumber() + res[4][2].toNumber();\n\n        const userAmountOfDeposits = (await BNBCrownContract.getUserAmountOfDeposits(account)).toNumber();\n        // get nft ids\n        const depositInfoCalls = [];\n        for(let i = 0; i <userAmountOfDeposits; i++){\n          depositInfoCalls.push([BNBCrownContract.address, \"getUserDepositInfo\", [account, i]]);\n        }\n        const depositInfo = (\n          await multicallHelper(multicallContract, BNBCROWN_ABI.abi, depositInfoCalls)\n        ).map((item,index) => {\n          const startDate = new Date(item.start * 1000);\n          const startMonth = simpleMonth(startDate.getMonth());\n          const startDay = startDate.getDate();\n\n          const endDate = new Date(item.finish * 1000);\n          const endMonth = simpleMonth(endDate.getMonth());\n          const endDay = endDate.getDate()\n          const progress =  Math.min((new Date().getTime() / 1000 - item.start) / (item.finish - item.start) * 100, 100)\n          return {\n          key: index,\n          plan: item.plan+1,\n          state: checkTime(item.finish*1000) ? \"Ended\" : \"Active\",\n          startDate: `${startDay} ${startMonth}`,\n          endDate: `${endDay} ${endMonth}`,\n          amount: Number(ethers.utils.formatEther(item.amount)),\n          earn: Number(ethers.utils.formatEther(item.profit)),\n          progress:progress,\n          percent: item.percent.toNumber() / 10,\n        }})\n\n        if (isMounted.current) {\n          dispatch({\n            type: FETCH_STATE.SUCCESS,\n            payload: {\n              depositInfo,\n              totalStaked,\n              available,\n              referralWithdrawn,\n              referralEarned,\n              totalInvited,\n              directInvited\n            },\n          });\n        }\n      } catch (err) {\n        console.error(err);\n        if (isMounted.current) {\n          dispatch({ type: FETCH_STATE.FAILURE });\n        }\n      }\n    };\n    fetchData();\n  }, [\n    BNBCrownContract,\n    multicallContract,\n    isMounted,\n    updateByTimer,\n    account,\n  ]);\n\n  return state;\n};\n\n\nexport const useInvest = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const BNBCrownContract = useBNBCrownContract();\n  const isMounted = useIsMounted();\n\n  const invest = async (amount, plan, referral) => {\n    try {\n      const { utils } = ethers;\n      if (!BNBCrownContract) {\n        return;\n      }\n      dispatch({ type: FETCH_STATE.INIT });\n      const tx = await BNBCrownContract.invest(\n        referral,\n        plan - 1, {value: utils.parseEther(amount)}\n      );\n\n      console.log(\"tx\", tx);\n      const receipt = await tx.wait();\n      console.log(\"receipt\", receipt);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.SUCCESS, payload: null });\n      }\n    } catch (error) {\n      console.log(error);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.FAILURE });\n      }\n    }\n  };\n\n  return { state, invest };\n};\n\nexport const useClaim = () => {\n  const [state, dispatch] = useReducer(readContractReducer, {\n    isLoading: false,\n    isError: false,\n    data: null,\n  });\n  const BNBCrownContract = useBNBCrownContract();\n  const isMounted = useIsMounted();\n\n  const claim = async () => {\n    try {\n      if (!BNBCrownContract) {\n        return;\n      }\n      dispatch({ type: FETCH_STATE.INIT });\n      const tx = await BNBCrownContract.withdraw();\n\n      console.log(\"tx\", tx);\n      const receipt = await tx.wait();\n      console.log(\"receipt\", receipt);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.SUCCESS, payload: null });\n      }\n    } catch (error) {\n      console.log(error);\n      if (isMounted.current) {\n        dispatch({ type: FETCH_STATE.FAILURE });\n      }\n    }\n  };\n\n  return { state, claim };\n};\n","import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { Row, Col, Input, message } from \"antd\";\nimport classNames from \"classnames\";\nimport styles from \"./PlanCard.module.scss\";\nimport numeral from \"numeral\";\nimport {\n  checkTime,\n  MIN_DEPOSIT,\n  PLAN_TYPE,\n  START_TIME,\n} from \"../../../utils/utils\";\nimport Button from \"../../UI/Button/Button\";\nimport { useTokenBalance } from \"../../../hooks/useToken\";\nimport { DEFAULT_INVITER, TOKENS } from \"../../../constants/addresses\";\nimport { useWallet } from \"../../../hooks/useWallet\";\nimport { useGlobalData, useInvest } from \"../../../hooks/useBNBCrown\";\nimport { useQuery } from \"../../../hooks/useQuery\";\n\nconst PlanCard = (props) => {\n  const { account } = useWallet();\n  const { data: nativeBalance } = useTokenBalance(TOKENS.NATIVE);\n  const { state: investState, invest } = useInvest();\n  const { data: globalData } = useGlobalData();\n  let queryInviterAddress = useQuery()?.get(\"ref\");\n  const startTime = globalData.startTime * 1000 || START_TIME;\n\n  const { info } = props;\n  const { id, rate, period, type } = info;\n\n  const minInvestAmount = globalData.minInvestAmount || MIN_DEPOSIT;\n  const [stakeAmount, setStakeAmount] = useState(minInvestAmount.toString());\n\n  const stakeAmountChangeHandler = (e) => {\n    const value = e.target.value;\n    if (Number.isNaN(Number(value))) {\n      return;\n    }\n    setStakeAmount(value);\n  };\n\n  const stake = () => {\n    if (!checkTime(startTime)) {\n      message.info(\"Coming soon\");\n      return;\n    }\n\n    if (investState?.isLoading) {\n      return;\n    }\n\n    if (!account) {\n      message.info(\"Please connect to wallet\");\n      return;\n    }\n\n    if (stakeAmount < minInvestAmount) {\n      message.info(\"Minimum deposit is \" + minInvestAmount + \" BNB\");\n      return;\n    }\n\n    // check for gas\n    if (nativeBalance < Number(stakeAmount) + 0.01) {\n      message.info(\"Insufficient BNB Balance\");\n      return;\n    }\n    if (!ethers.utils.isAddress(queryInviterAddress)) {\n      queryInviterAddress = DEFAULT_INVITER;\n    }\n    invest(stakeAmount, id, queryInviterAddress);\n  };\n\n  let totalReturnRate, withdrawTime, colorTheme, footNote, blue;\n  switch (type) {\n    case PLAN_TYPE.SIMPLE:\n      totalReturnRate = rate * period;\n      withdrawTime = \"Any Time\";\n      break;\n    case PLAN_TYPE.COMPOUND:\n      totalReturnRate = (1 + rate) ** period - 1;\n      withdrawTime = \"End of Plan\";\n      colorTheme = styles.blue;\n      footNote = \"* plan use auto compounding\";\n      blue = true;\n      break;\n    default:\n  }\n  const calculatedReturn = Number(stakeAmount) * totalReturnRate;\n\n  return (\n    <div className={classNames(styles.planCard, colorTheme)}>\n      <div className={classNames(styles.planBar)}>{`Plan ${id}`}</div>\n      <div className={styles.profitDetail}>\n        <Row gutter={[0, 20]}>\n          <Col span={12}>\n            <p className={styles.detailTitle}>Daily Profit</p>\n            <p className={styles.detailValue}>\n              {numeral(rate).format(\"0.[0]%\")}\n            </p>\n          </Col>\n          <Col span={12}>\n            <p className={styles.detailTitle}>Total Return</p>\n            <p className={styles.detailValue}>\n              {numeral(totalReturnRate).format(\"0.[0]%\")}\n            </p>\n          </Col>\n          <Col span={12}>\n            <p className={styles.detailTitle}>Withdraw time</p>\n            <p className={styles.detailValue} style={{ fontSize: \"28px\" }}>\n              {withdrawTime}\n            </p>\n          </Col>\n          <Col span={12}>\n            <p className={styles.detailTitle}>Days</p>\n            <p className={styles.detailValue}>{period}</p>\n          </Col>\n          <Col span={24}>\n            <p className={styles.detailTitle}>Enter Amount</p>\n            <Input value={stakeAmount} onChange={stakeAmountChangeHandler} />\n          </Col>\n        </Row>\n      </div>\n\n      <div className={styles.getBnb}>\n        <p className={styles.detailTitle} style={{ margin: 0 }}>\n          In {period} Days You will Get\n        </p>\n        <p className={styles.detailValue}>\n          {numeral(calculatedReturn).format(\"0.[000]\")}\n        </p>\n      </div>\n      <Button\n        className={styles.button}\n        onClick={stake}\n        disabled={!(calculatedReturn > 0 && account)}\n        blue={blue}\n      >\n        Stake\n      </Button>\n      <p className={styles.footNote}>{footNote}</p>\n    </div>\n  );\n};\n\nexport default PlanCard;\n","import React from \"react\";\nimport numeral from 'numeral';\n\nimport styles from \"./StakeCard.module.scss\";\nimport classNames from \"classnames\";\n\nconst StakeCard = (props) => {\n  const { info } = props;\n  const { plan, state, startDate, endDate, amount, earn, percent, progress } = info;\n  return (\n    <div className={classNames(styles.stakeCard, plan >3 ? styles.blue : '')}>\n      <div className={styles.planTitle}>\n        <p className={styles.type}>{`Plan ${plan}`}</p>\n        <p className={styles.state}>{state}</p>\n        <p className={styles.time}>{`${startDate} - ${endDate}`}</p>\n      </div>\n      <div className={styles.planRate}>\n        <p>{numeral(percent).format('0.[0]')}%</p>\n      </div>\n      <div className={styles.planDetail}>\n        <div className={classNames(styles.infoItem, styles.left)}>\n          <h1>{numeral(amount).format('0.[000]')}</h1>\n          <p>Staked amount</p>\n        </div>\n        <div className={classNames(styles.infoItem, styles.right)}>\n          <h1>{numeral(earn).format('0.[000]')}</h1>\n          <p>Total Return</p>\n        </div>\n      </div>\n      <div className={styles.progress}>\n        <div className={styles.inner} style={{width: `${progress}%`}}>\n          <div className={styles.percentage}>{numeral(progress).format('0.[00]%')}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StakeCard;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './Countdown.module.scss';\n\nconst Countdown = (props) => {\n  const [timeLeft, setTimeLeft] = useState({\n    sec: 0,\n    min: 0,\n    hour: 0,\n    day: 0,\n  });\n  const { timestamp, className } = props;\n\n  function calculateTimeLeft(endTS) {\n    let diff = (+new Date(endTS) - +new Date()) / 1000;\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeftLocal = {\n      year: 0,\n      day: 0,\n      hour: 0,\n      min: 0,\n      sec: 0,\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= 365.25 * 86400) {\n      // 365.25 * 24 * 60 * 60\n      timeLeftLocal.year = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeftLocal.year * 365.25 * 86400;\n    }\n    if (diff >= 86400) {\n      // 24 * 60 * 60\n      timeLeftLocal.day = Math.floor(diff / 86400);\n      diff -= timeLeftLocal.day * 86400;\n    }\n    if (diff >= 3600) {\n      // 60 * 60\n      timeLeftLocal.hour = Math.floor(diff / 3600);\n      diff -= timeLeftLocal.hour * 3600;\n    }\n    if (diff >= 60) {\n      timeLeftLocal.min = Math.floor(diff / 60);\n      diff -= timeLeftLocal.min * 60;\n    }\n    timeLeftLocal.sec = Math.floor(diff);\n\n    return timeLeftLocal;\n  }\n\n  function addLeadingZeros(val) {\n    let value = val;\n    value = String(value);\n    while (value.length < 2) {\n      value = `0${value}`;\n    }\n    return value;\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setTimeLeft(calculateTimeLeft(timestamp));\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [timestamp, timeLeft]);\n\n  return (\n    <span className={classnames(styles.Countdown, className)}>\n      {parseInt(timeLeft.day, 10) > 0 ? (\n        <>\n          <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.day)}</span>\n          <span className={styles.colon}>:</span>\n        </>\n      ) : null}\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.hour)}</span>\n      <span className={styles.colon}>:</span>\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.min)}</span>\n      <span className={styles.colon}>:</span>\n      <span className={styles.countdownCol}>{addLeadingZeros(timeLeft.sec)}</span>\n    </span>\n  );\n};\n\nCountdown.propTypes = {\n  timestamp: PropTypes.number,\n  className: PropTypes.string,\n};\n\nCountdown.defaultProps = {\n  timestamp: new Date().getTime(),\n  className: '',\n};\n\nexport default Countdown;\n","import React, { useState, useEffect } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport CountUp from \"react-countup\";\nimport { Row, Col, List, message } from \"antd\";\nimport classnames from \"classnames\";\nimport MainContainer from \"../../Components/UI/MainContainer/MainContainer\";\nimport BalanceCard from \"../../Components/Home/BalanceCard/BalanceCard\";\nimport PlanCard from \"../../Components/Home/PlanCard/PlanCard\";\nimport StakeCard from \"../../Components/Home/StakeCard/StakeCard\";\nimport Countdown from \"../../Components/UI/Countdown/Countdown\";\nimport styles from \"./Home.module.scss\";\nimport { checkTime, PLAN_TYPE, START_TIME } from \"../../utils/utils\";\nimport { useWallet } from \"../../hooks/useWallet\";\nimport { useTokenBalance } from \"../../hooks/useToken\";\nimport { BNBCROWN_ADDRESS, TOKENS } from \"../../constants/addresses\";\nimport { useClaim, useGlobalData, useUserInfo } from \"../../hooks/useBNBCrown\";\nimport Button from \"../../Components/UI/Button/Button\";\n\nconst planInfo = [\n  {\n    id: 1,\n    rate: 0.08,\n    period: 14,\n    type: PLAN_TYPE.SIMPLE,\n  },\n  {\n    id: 2,\n    rate: 0.065,\n    period: 21,\n    type: PLAN_TYPE.SIMPLE,\n  },\n  {\n    id: 3,\n    rate: 0.05,\n    period: 28,\n    type: PLAN_TYPE.SIMPLE,\n  },\n  {\n    id: 4,\n    rate: 0.08,\n    period: 14,\n    type: PLAN_TYPE.COMPOUND,\n  },\n  {\n    id: 5,\n    rate: 0.065,\n    period: 21,\n    type: PLAN_TYPE.COMPOUND,\n  },\n  {\n    id: 6,\n    rate: 0.05,\n    period: 28,\n    type: PLAN_TYPE.COMPOUND,\n  },\n];\n\nconst Home = () => {\n  const { account } = useWallet();\n  const { data: nativeBalance } = useTokenBalance(TOKENS.NATIVE);\n  const { data: contractBalance } = useTokenBalance(\n    TOKENS.NATIVE,\n    BNBCROWN_ADDRESS\n  );\n  const { state: claimState, claim } = useClaim();\n  const { data: globalData } = useGlobalData();\n  const { data: userData } = useUserInfo();\n  const [availableStart, setAvailableStart] = useState(0);\n\n  const startTime = globalData.startTime * 1000 || START_TIME;\n  const referralLink = `${window.location.origin}?ref=${account}`;\n  const totalStaked = userData.totalStaked || \"-\";\n  const available = userData.available || 0;\n  const referralEarned = userData.referralEarned || \"-\";\n  const referralWithdrawn = userData.referralWithdrawn || \"-\";\n  const totalInvited = userData.totalInvited || \"-\";\n  const directInvited = userData.directInvited || \"-\";\n\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      setAvailableStart(available);\n    }, 5000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [available]);\n\n  const claimAvailable = () => {\n    if (!checkTime(startTime)) {\n      message.info(\"Coming soon\");\n      return;\n    }\n    if (claimState?.isLoading) {\n      return;\n    }\n\n    if (!account) {\n      message.info(\"Please connect to wallet\");\n      return;\n    }\n\n    // check for gas\n    if (nativeBalance < 0.01) {\n      message.info(\"Insufficient gas\");\n      return;\n    }\n    claim();\n  };\n\n  return (\n    <div className={styles.home}>\n      <MainContainer className={styles.mainContentWrapper}>\n        <section className={styles.balanceInfo}>\n          {/* <BalanceCard isContract balance={stakedBalance} /> */}\n          <BalanceCard\n            title={\"Total Contract Balance\"}\n            value={contractBalance || \"-\"}\n          />\n          <BalanceCard\n            title={\"Total Investors\"}\n            value={globalData.totalInvestors || \"-\"}\n          />\n        </section>\n        {!checkTime(startTime) && (\n          <section className={styles.countdownWrap}>\n            <h2>Launch in:</h2>\n            <Countdown className={styles.countdown} timestamp={startTime} />\n          </section>\n        )}\n\n        <section className={classnames(styles.mainIntro, styles.common)}>\n          <img src=\"./static/images/home/mainIntro.png\" alt=\"main\" />\n          <div className={styles.introWrapper}>\n            <div className={styles.introContent}>\n              <Row gutter={[8, 16]}>\n                <Col span={8}>Total Income</Col>\n                <Col span={16}>\n                  <span>Based on your staking plan (From 5% to 8% daily)</span>\n                </Col>\n                <Col span={8}>Basic Interest Rate</Col>\n                <Col span={16}>\n                  <span>\n                    +0.5% Every 24 Hours(0.02% hourly) - Only For New Deposits\n                  </span>\n                </Col>\n                <Col span={8}>Minimal Deposit</Col>\n                <Col span={16}>\n                  <span>0.05 BNB,no maximal limit</span>\n                </Col>\n                <Col span={8}>Fees</Col>\n                <Col span={16}>\n                  <span>5% devs fees and 5% withdraw fees</span>\n                </Col>\n              </Row>\n            </div>\n            <p>\n              Earning every moment,withdraw anytime (if you use auto-compounding\n              you can withdraw only after end of your deposit)\n            </p>\n          </div>\n        </section>\n\n        <section className={styles.plans}>\n          <List\n            className={styles.selectorList}\n            grid={{\n              gutter: 16,\n              xs: 1,\n              sm: 1,\n              md: 2,\n              lg: 2,\n              xl: 3,\n              xxl: 3,\n            }}\n            dataSource={globalData.planInfo || planInfo}\n            renderItem={(item) => (\n              <List.Item>\n                <PlanCard info={item} />\n              </List.Item>\n            )}\n          />\n        </section>\n\n        <section className={styles.userInfo}>\n          <div className={styles.referralWrapper}>\n            <div className={styles.stakeSummary}>\n              <img src=\"./static/images/home/referral.png\" alt=\"referral\" />\n              <h6>Total Staked</h6>\n              <span>{totalStaked}</span>\n              <h6>Available BNB for withdraw</h6>\n              <span>\n                <CountUp\n                  start={availableStart}\n                  end={available}\n                  duration={4}\n                  decimals={6}\n                  decimal=\".\"\n                />\n              </span>\n\n              <Button\n                className={styles.withdrawButton}\n                disabled={!(available > 0 && account)}\n                onClick={claimAvailable}\n              >\n                Withdraw\n              </Button>\n            </div>\n            <div className={styles.referralDetail}>\n              <h6>Your referral link</h6>\n              <div className={styles.referralLink}>\n                <h6>{referralLink}</h6>\n                <CopyToClipboard\n                  text={referralLink}\n                  onCopy={() => {\n                    message.success(\"Referral link copied\");\n                  }}\n                >\n                  <img\n                    src=\"./static/images/home/copy.png\"\n                    alt=\"copy\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                </CopyToClipboard>\n              </div>\n              <div className={styles.referralData}>\n                <Row>\n                  <Col span={12}>\n                    <h6>Total Referral Earned</h6>\n                    <span>{referralEarned}</span>\n                  </Col>\n                  <Col span={12}>\n                    <h6>Total Referral Withdrawn</h6>\n                    <span>{referralWithdrawn}</span>\n                  </Col>\n                  <Col span={12}>\n                    <h6>Direct referred members</h6>\n                    <span>{directInvited}</span>\n                  </Col>\n                  <Col span={12}>\n                    <h6>Team members</h6>\n                    <span>{totalInvited}</span>\n                  </Col>\n                </Row>\n              </div>\n              <div className={styles.referralBonus}>\n                Earn for promotion BNBCrown <br />\n                <br />\n                You will receive: <br />\n                <br />\n                5% from each level 1 referral deposits <br />\n                3% from each level 2 referral deposits <br />\n                2% from each level 3 referral deposits <br />\n                <br />\n                You need to have at least 1 deposit to start receive earnings.\n              </div>\n            </div>\n          </div>\n        </section>\n        {userData.depositInfo && userData.depositInfo.length > 0 && (\n          <section className={styles.stakeDetail}>\n            <List\n              className={styles.selectorList}\n              grid={{\n                gutter: 16,\n                xs: 1,\n                sm: 2,\n                md: 2,\n                lg: 3,\n                xl: 3,\n                xxl: 3,\n              }}\n              dataSource={Object.values(userData.depositInfo)}\n              renderItem={(item) => (\n                <List.Item>\n                  <StakeCard info={item} />\n                </List.Item>\n              )}\n            />\n          </section>\n        )}\n      </MainContainer>\n    </div>\n  );\n};\n\nexport default Home;\n","import { Routes, Route, Navigate } from \"react-router-dom\";\nimport Header from \"./Components/Header/Header\";\n// import Footer from \"./Components/Footer/Footer\";\nimport Home from \"./View/Home/Home\";\n\nimport styles from \"./App.module.scss\";\nimport \"antd/dist/antd.css\";\n\nconst App = () => {\n  return (\n    <div className={styles.App}>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n      </Routes>\n      {/* <Footer /> */}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n// import styles from \"./index.module.scss\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ProvideWallet } from \"./hooks/useWallet\";\nimport { ProvideUpdate } from \"./hooks/useUpdate\";\nimport { ProvideQuery } from \"./hooks/useQuery\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ProvideQuery>\n        <ProvideWallet>\n          <ProvideUpdate>\n            <App />\n          </ProvideUpdate>\n        </ProvideWallet>\n      </ProvideQuery>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1uDBa\",\"countdownWrap\":\"Home_countdownWrap__VDcYX\",\"balanceInfo\":\"Home_balanceInfo__bwJ7R\",\"mainContentWrapper\":\"Home_mainContentWrapper__2BGv8\",\"mainIntro\":\"Home_mainIntro__zP1Vj\",\"introWrapper\":\"Home_introWrapper__2RRdH\",\"introContent\":\"Home_introContent__1sjeN\",\"plans\":\"Home_plans__31Qdn\",\"userInfo\":\"Home_userInfo__3yZLv\",\"referralWrapper\":\"Home_referralWrapper__2Rbjt\",\"stakeSummary\":\"Home_stakeSummary__3zgHQ\",\"withDrawButton\":\"Home_withDrawButton__eq3pS\",\"referralDetail\":\"Home_referralDetail__25TJU\",\"referralLink\":\"Home_referralLink__qhqFm\",\"referralBonus\":\"Home_referralBonus__2TRao\",\"common\":\"Home_common__3yA_5\",\"withdrawButton\":\"Home_withdrawButton__3o1NQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planCard\":\"PlanCard_planCard__1qa6I\",\"planBar\":\"PlanCard_planBar__1p-Oh\",\"profitDetail\":\"PlanCard_profitDetail__3e6ub\",\"detailTitle\":\"PlanCard_detailTitle__QyLVa\",\"detailValue\":\"PlanCard_detailValue__3IklW\",\"getBnb\":\"PlanCard_getBnb__11FpC\",\"planButton\":\"PlanCard_planButton__1kN4W\",\"blue\":\"PlanCard_blue__Ll93u\",\"button\":\"PlanCard_button__2ACUz\",\"footNote\":\"PlanCard_footNote__2Ga2M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stakeCard\":\"StakeCard_stakeCard__2D5j0\",\"progress\":\"StakeCard_progress__8FDvd\",\"inner\":\"StakeCard_inner__3Cvm_\",\"percentage\":\"StakeCard_percentage__3HW_X\",\"blue\":\"StakeCard_blue__1lpL1\",\"planTitle\":\"StakeCard_planTitle__ELq62\",\"type\":\"StakeCard_type__2PkPh\",\"state\":\"StakeCard_state__24X-f\",\"infoItem\":\"StakeCard_infoItem__1-QDw\",\"planRate\":\"StakeCard_planRate__3VhC1\",\"time\":\"StakeCard_time__2BGlV\",\"planDetail\":\"StakeCard_planDetail__2Q8-C\",\"left\":\"StakeCard_left__2wklx\",\"right\":\"StakeCard_right__1Y9kY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Countdown\":\"Countdown_Countdown__2abhX\",\"countdownCol\":\"Countdown_countdownCol__bO4py\",\"colon\":\"Countdown_colon__1fKhP\"};"],"sourceRoot":""}